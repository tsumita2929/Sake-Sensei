# Bandit configuration file for SakeSensei
# Security linting configuration for Python code

[bandit]
# Exclude specific directories
exclude_dirs = [
    '/tests/',
    '/infrastructure/cdk.out/',
    '/.venv/',
    '/htmlcov/',
    '/.pytest_cache/',
    '/node_modules/',
]

# Test IDs to skip
# B101: assert_used - OK for tests
# B601: paramiko_calls - Not using paramiko
# B602: shell_injection - We control shell commands
# B603: subprocess_without_shell_equals_true - Intentional for security
# B607: start_process_with_partial_path - OK for known binaries
skips = ['B101', 'B601', 'B602']

# Test IDs to explicitly run
# B201: flask_debug_true
# B301: pickle - Insecure deserialization
# B302: marshal - Insecure deserialization
# B303: MD5, SHA1 - Weak cryptographic hashes
# B304: ciphers - Insecure cipher usage
# B305: cipher_modes - Weak cipher modes
# B306: mktemp_q - Insecure temp file creation
# B307: eval - Use of eval()
# B308: mark_safe - Django mark_safe usage
# B310: urllib_urlopen - Potential SSRF
# B311: random - Use of random for security
# B312: telnetlib - Insecure telnet usage
# B313: xml_bad_cElementTree - XML external entity
# B314: xml_bad_ElementTree - XML external entity
# B315: xml_bad_expatreader - XML external entity
# B316: xml_bad_expatbuilder - XML external entity
# B317: xml_bad_sax - XML external entity
# B318: xml_bad_minidom - XML external entity
# B319: xml_bad_pulldom - XML external entity
# B320: xml_bad_etree - XML external entity
# B321: ftplib - FTP usage
# B323: unverified_context - SSL context without verification
# B324: hashlib - Insecure hash functions
# B325: tempnam - Insecure temp file
# B401: import_telnetlib - Telnet import
# B402: import_ftplib - FTP import
# B403: import_pickle - Pickle import
# B404: import_subprocess - Subprocess import (info only)
# B405: import_xml_etree - XML etree import (info only)
# B406: import_xml_sax - XML SAX import (info only)
# B407: import_xml_expat - XML expat import (info only)
# B408: import_xml_minidom - XML minidom import (info only)
# B409: import_xml_pulldom - XML pulldom import (info only)
# B410: import_lxml - lxml import (info only)
# B411: import_xmlrpclib - XML-RPC import
# B412: import_httpoxy - HTTP proxy header injection
# B413: import_pycrypto - pycrypto import
# B501: request_with_no_cert_validation
# B502: ssl_with_bad_version
# B503: ssl_with_bad_defaults
# B504: ssl_with_no_version
# B505: weak_cryptographic_key
# B506: yaml_load - Unsafe YAML deserialization
# B507: ssh_no_host_key_verification
# B601: paramiko_calls
# B602: subprocess_popen_with_shell_equals_true
# B603: subprocess_without_shell_equals_true
# B604: any_other_function_with_shell_equals_true
# B605: start_process_with_a_shell
# B606: start_process_with_no_shell
# B607: start_process_with_partial_path
# B608: hardcoded_sql_expressions
# B609: linux_commands_wildcard_injection
# B610: django_extra_used
# B611: django_rawsql_used
# B701: jinja2_autoescape_false
# B702: use_of_mako_templates
# B703: django_mark_safe

# Severity level: low, medium, high
# Only report issues of medium severity or higher
# Options: all, low, medium, high
level = medium

# Confidence level: low, medium, high
# Only report issues with medium confidence or higher
# Options: all, low, medium, high
confidence = medium

# Output format options: csv, custom, html, json, screen, txt, xml, yaml
# Default: screen (for CI, use json or xml)

# Maximum number of code lines to show in reports
# Default: -1 (show all lines)
max_lines_per_issue = 10

[bandit.formatters]
# Custom formatter options can be defined here

[bandit.plugins]
# Plugin-specific configuration

[bandit.blacklist_calls]
# Additional function blacklist
# Example:
# bad_name_sets = [
#     {
#         "name": "dangerous_functions",
#         "imports": ["os", "subprocess"],
#         "qualnames": ["os.system", "subprocess.call"],
#         "message": "Avoid using dangerous shell functions"
#     }
# ]

[bandit.blacklist_imports]
# Additional import blacklist for high-risk modules
# Telnet, FTP, and other insecure protocols should be avoided

[bandit.hardcoded_tmp_directory]
# Configuration for B108: hardcoded_tmp_directory
# Warn about hardcoded /tmp usage
tmp_dirs = ['/tmp', '/var/tmp', '/dev/shm']

[bandit.ssl_with_bad_version]
# Configuration for B502: ssl_with_bad_version
# Acceptable SSL/TLS versions
bad_protocol_versions = [
    'PROTOCOL_SSLv2',
    'PROTOCOL_SSLv3',
    'PROTOCOL_TLSv1',
    'PROTOCOL_TLSv1_1',
    'SSLv2_METHOD',
    'SSLv23_METHOD',
    'SSLv3_METHOD',
    'TLSv1_METHOD',
    'TLSv1_1_METHOD',
]

[bandit.try_except_pass]
# Configuration for B110: try_except_pass
# Detect empty except: pass blocks
check_typed_exception = True

[bandit.hardcoded_password]
# Configuration for B105, B106, B107: hardcoded password strings
# Patterns that indicate hardcoded passwords
# password_patterns = ['password', 'pass', 'pwd', 'secret', 'token']
