name: Pull Request Checks

on:
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dependencies
        run: uv sync

      - name: Check code formatting
        run: uv run ruff format --check .

      - name: Run linter
        run: uv run ruff check .

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dependencies
        run: uv sync

      - name: Run mypy on streamlit_app
        run: uv run mypy streamlit_app --ignore-missing-imports || true

      - name: Run mypy on backend
        run: uv run mypy backend --ignore-missing-imports || true

      - name: Run mypy on agent
        run: uv run mypy agent --ignore-missing-imports || true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dependencies
        run: uv sync

      - name: Run unit tests
        run: uv run pytest tests/unit -v --tb=short

      - name: Run integration tests
        run: uv run pytest tests/integration -v --tb=short

      - name: Run agent tests
        run: uv run pytest tests/agent -v --tb=short

      - name: Run e2e tests
        run: uv run pytest tests/e2e -v --tb=short

      - name: Generate coverage report
        run: uv run pytest --cov --cov-report=xml --cov-report=term -m "not smoke"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dependencies
        run: uv sync

      - name: Run Bandit security scanner
        run: uv run bandit -r streamlit_app backend agent -f json -o bandit-report.json || true

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-security-report
          path: bandit-report.json

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        working-directory: streamlit_app
        run: |
          docker build \
            --platform linux/amd64 \
            -t sakesensei:pr-${{ github.event.pull_request.number }} \
            -f Dockerfile \
            ..

      - name: Test Docker image
        run: |
          docker run --rm \
            -e COGNITO_USER_POOL_ID=test-pool \
            -e COGNITO_CLIENT_ID=test-client \
            -e AWS_REGION=us-west-2 \
            sakesensei:pr-${{ github.event.pull_request.number }} \
            python -c "import streamlit; print('Streamlit version:', streamlit.__version__)"

  agent-test:
    name: Agent Local Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Sync dependencies
        run: uv sync

      - name: Test agent locally
        working-directory: agent
        run: uv run pytest ../tests/agent/test_agent_local.py -v

  summary:
    name: PR Check Summary
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, security, docker-build, agent-test]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "Lint: ${{ needs.lint.result }}"
          echo "Type Check: ${{ needs.type-check.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo "Docker Build: ${{ needs.docker-build.result }}"
          echo "Agent Test: ${{ needs.agent-test.result }}"

      - name: Fail if any check failed
        if: |
          needs.lint.result == 'failure' ||
          needs.type-check.result == 'failure' ||
          needs.test.result == 'failure' ||
          needs.docker-build.result == 'failure' ||
          needs.agent-test.result == 'failure'
        run: exit 1
